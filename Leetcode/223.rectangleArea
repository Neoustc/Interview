 //instead checking whether the rect overlap, max the right with left, or min top with bottom;
 int computeArea(int A, int B, int C, int D, int E, int F, int G, int H) 
 {
 	int left = max(A, E);
 	int right = max(left, min(C, G));
 	int top = min(D, H);
 	int bottom = min(top, max(B, F));
 	int area = (C - A) * (D - B) + (G - E) * (H - F) - (right - left) * (top - bottom);
 	return area;
 }

//could prevent overflow!
 int computeArea(int A, int B, int C, int D, int E, int F, int G, int H)
{
    int x = min(G, C) > max(E, A) ? (min(G, C) - max(E, A)) : 0;
    int y = min(D, H) > max(B, F) ? (min(D, H) - max(B, F)) : 0;
    return (D - B) * (C - A) + (G - E) * (H - F) - x * y;
}
